// Code generated by pioasm; DO NOT EDIT.

//go:build ignore
package tinylib
import (
	pio "github.com/tinygo-org/pio/rp2-pio"
)
// Encoder

const EncoderWrapTarget = 15
const EncoderWrap = 23

var EncoderInstructions = []uint16{
		0x000f, //  0: jmp    15
		0x000e, //  1: jmp    14
		0x0015, //  2: jmp    21
		0x000f, //  3: jmp    15
		0x0015, //  4: jmp    21
		0x000f, //  5: jmp    15
		0x000f, //  6: jmp    15
		0x000e, //  7: jmp    14
		0x000e, //  8: jmp    14
		0x000f, //  9: jmp    15
		0x000f, // 10: jmp    15
		0x0015, // 11: jmp    21
		0x000f, // 12: jmp    15
		0x0015, // 13: jmp    21
		0x008f, // 14: jmp    y--, 15
		//     .wrap_target
		0xa0c2, // 15: mov    isr, y
		0x8000, // 16: push   noblock
		0x60c2, // 17: out    isr, 2
		0x4002, // 18: in     pins, 2
		0xa0e6, // 19: mov    osr, isr
		0xa0a6, // 20: mov    pc, isr
		0xa04a, // 21: mov    y, ~y
		0x0097, // 22: jmp    y--, 23
		0xa04a, // 23: mov    y, ~y
		//     .wrap
}
const EncoderOrigin = 0
func EncoderProgramDefaultConfig(offset uint8) pio.StateMachineConfig {
	cfg := pio.DefaultStateMachineConfig()
	cfg.SetWrap(offset+EncoderWrapTarget, offset+EncoderWrap)
	return cfg;
}

